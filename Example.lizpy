(program "namespace"
    ; This is a variable declaration
    (declare variableOne)

    ; This is a list variable declaration
    (declarel variableTwo)

    ; This is a custom expression declaration
    (defexpr customExprOne ^{ :position [24.53 -235.96], :format "Custom Expr takes % and %" }
        [arg1 arg2]
        (+ (* 10 arg1) arg2))

    ; This is a custom instruction declaration
    (definst customInstOne ^{ :position [65 82], :format "Custom Inst %" }
        [arg]
        (display (join "Example " arg)))

    (on-start ^{ :position [125 25] }
        (comment "This is a sample flight program")
        (set variableOne 4)
        (set variableTwo 2)
        (customInstOne (customExprOne variableOne variableTwo))
        (wait 3)
        (while (> (fuel :stage) 0)
            (display (repeat ". " (% (round (time :since-launch)) 3)))
            (wait 0)))

    (defexpr repeat [str times] (if (<= times 0) "" (join str (repeat str (- times 1)))))

    (defexpr' map [selector' list]
        (if (= (length list) 0)
            []
            (cons (selector' (first list)) (map selector' (rest list)))))
)
